
# Hints that apply only to the HLint source code

#####################################################################
## RESTRICTIONS

# - extensions:
#   - allow: [DeriveDataTypeable, GeneralizedNewtypeDeriving, NoMonomorphismRestriction, OverloadedStrings]
#   - allow: [PatternGuards, Rank2Types, RecordWildCards, ScopedTypeVariables, ViewPatterns]
#   - allow: [ExistentialQuantification, MultiParamTypeClasses]
#   - allow: [FlexibleContexts, FlexibleInstances]
#   - {allow: CPP, within: HsColour} # so it can be disabled to avoid GPL code
#
# - flags:
#   - {allow: [-fno-warn-missing-fields, -fno-cse, -O0], within: CmdLine} # for cmdargs
#
# - modules:
#   - {allow: Data.Set, qualified: Set}
#   - {allow: Data.Map, qualified: Map}
#
# - functions:
#   - {allow: unsafeInterleaveIO, within: Parallel}
#   - {allow: unsafePerformIO, within: [Util.exitMessage, Test.Util.ref]}

- warn: {name: Use explicit module export list}
- ignore: {name: Use explicit module export list, within: HSE.Util}


#####################################################################
## HINTS

- error: {lhs: QVarOp a (UnQual b x), rhs: toNamed x}
- error: {lhs: QConOp a (UnQual b x), rhs: toNamed x}
- error: {lhs: UnQual a (Symbol b x), rhs: toNamed x}
- error: {lhs: UnQual a (Ident  b x), rhs: toNamed x}
- error: {lhs: Var a (toNamed x), rhs: toNamed x}
- error: {lhs: Con a (toNamed x), rhs: toNamed x}

- error: {lhs: idea Warning, rhs: warn}
- error: {lhs: idea Suggestion, rhs: suggest}
- error: {lhs: ideaN Warning, rhs: warnN}
- error: {lhs: ideaN Suggestion, rhs: suggestN}


#####################################################################
## IGNORES

# would require module cycles
- ignore: {name: Use toNamed, within: HSE.Util}
# doesn't fit with the other statements
- ignore: {name: Use let, within: [HLint, Test.All]}
