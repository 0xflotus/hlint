---------------------------------------------------------------------
RUN tests/newtype-derive.hs --with= --hint=data/hlint.yaml
FILE tests/newtype-derive.hs
{-# LANGUAGE DeriveFoldable #-}
{-# LANGUAGE DeriveFunctor #-}
{-# LANGUAGE DeriveTraversable #-}
{-# LANGUAGE DeriveDataTypeable #-}
module Test(A) where

import Data.Foldable (Foldable)
import Data.Traversable (Traversable)
import Data.Typeable (Typeable)

newtype A f = A f
  deriving (Foldable, Functor, Traversable, Typeable)
OUTPUT
No hints

---------------------------------------------------------------------
RUN tests/note.hs
FILE tests/note.hs
{-# LANGUAGE RecordWildCards #-}

module Sample(test) where

test xs = length xs == 0
OUTPUT
tests/note.hs:1:1: Warning: Unused LANGUAGE pragma
Found:
  {-# LANGUAGE RecordWildCards #-}
Why not remove it?
Note: may require `{-# LANGUAGE DisambiguateRecordFields #-}` adding to the top of the file

tests/note.hs:5:11: Suggestion: Use null
Found:
  length xs == 0
Why not:
  null xs
Note: increases laziness

2 hints

---------------------------------------------------------------------
RUN tests/brackets.hs
FILE tests/brackets.hs
test = if isNothing x then (-1.0) else fromJust x
OUTPUT
tests/brackets.hs:1:8: Warning: Use fromMaybe
Found:
  if isNothing x then (-1.0) else fromJust x
Why not:
  fromMaybe (-1.0) x

1 hint

---------------------------------------------------------------------
RUN tests/typesig-ignore.hs
FILE tests/typesig-ignore.hs
-- Bug #563
module Foo(foobar) where
{-# ANN foobar "HLint: ignore Use String" #-}

foobar :: [Char]
foobar = []
OUTPUT
No hints
