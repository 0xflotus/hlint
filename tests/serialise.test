---------------------------------------------------------------------
RUN tests/serialise-none.hs --serialise
FILE tests/serialise-none.hs
foo = (+1)
OUTPUT
[]

---------------------------------------------------------------------
RUN tests/serialise-one.hs --serialise
FILE tests/serialise-one.hs
foo = (+1)
bar x = foo x
OUTPUT
[("tests/serialise-one.hs:2:1: Error: Eta reduce\nFound:\n  bar x = foo x\nWhy not:\n  bar = foo\n",[Replace {rtype = Decl, pos = SrcSpan {start = (2,1), end = (2,14)}, subts = [("body",SrcSpan {start = (2,9), end = (2,12)})], orig = "bar = body"}])]

---------------------------------------------------------------------
RUN tests/serialise-two.hs --serialise
FILE tests/serialise-two.hs
foo = (+1)
bar x = foo x
baz = getLine >>= return . map toUpper
OUTPUT
[("tests/serialise-two.hs:2:1: Error: Eta reduce\nFound:\n  bar x = foo x\nWhy not:\n  bar = foo\n",[Replace {rtype = Decl, pos = SrcSpan {start = (2,1), end = (2,14)}, subts = [("body",SrcSpan {start = (2,9), end = (2,12)})], orig = "bar = body"}]),("tests/serialise-two.hs:3:7: Warning: Use liftM\nFound:\n  getLine >>= return . map toUpper\nWhy not:\n  Control.Monad.liftM (map toUpper) getLine\n",[Replace {rtype = Expr, pos = SrcSpan {start = (3,7), end = (3,39)}, subts = [("f",SrcSpan {start = (3,28), end = (3,39)}),("m",SrcSpan {start = (3,7), end = (3,14)})], orig = "Control.Monad.liftM (f) m"}])]

---------------------------------------------------------------------
RUN tests/serialise-three.hs --serialise
FILE tests/serialise-three.hs
foo = concat (map f (let x = x in x))
OUTPUT
[("tests/serialise-three.hs:1:7: Error: Use concatMap\nFound:\n  concat (map f (let x = x in x))\nWhy not:\n  concatMap f (let x = x in x)\n",[Replace {rtype = Expr, pos = SrcSpan {start = (1,7), end = (1,38)}, subts = [("f",SrcSpan {start = (1,19), end = (1,20)}),("x",SrcSpan {start = (1,21), end = (1,37)})], orig = "concatMap f x"}])]

---------------------------------------------------------------------
RUN tests/serialise-four.hs --serialise
FILE tests/serialise-four.hs
{-# LANGUAGE CPP #-}
{-# LANGUAGE CPP #-}
OUTPUT
[("tests/serialise-four.hs:1:1: Error: Use better pragmas\nFound:\n  {-# LANGUAGE CPP #-}\n  {-# LANGUAGE CPP #-}\nWhy not:\n  {-# LANGUAGE CPP #-}\n",[ModifyComment {pos = SrcSpan {start = (1,1), end = (1,21)}, newComment = "{-# LANGUAGE CPP #-}"},ModifyComment {pos = SrcSpan {start = (2,1), end = (2,21)}, newComment = ""}])]


---------------------------------------------------------------------
RUN tests/serialise-five.hs --serialise
FILE tests/serialise-five.hs
import qualified GHC as GHC
OUTPUT
[("tests/serialise-five.hs:1:1: Warning: Redundant as\nFound:\n  import qualified GHC as GHC\nWhy not:\n  import qualified GHC\n",[RemoveAsKeyword {pos = SrcSpan {start = (1,1), end = (1,28)}}])]

---------------------------------------------------------------------
RUN tests/serialise-six.hs --serialise
FILE tests/serialise-six.hs
foo = qux (\x -> f (g x))
OUTPUT
[("tests/serialise-six.hs:1:12: Warning: Avoid lambda\nFound:\n  \\ x -> f (g x)\nWhy not:\n  f . g\n",[Replace {rtype = Expr, pos = SrcSpan {start = (1,12), end = (1,25)}, subts = [("a",SrcSpan {start = (1,18), end = (1,19)}),("b",SrcSpan {start = (1,21), end = (1,22)})], orig = "a . b"}])]

---------------------------------------------------------------------
RUN tests/serialise-seven.hs --serialise
FILE tests/serialise-seven.hs
foo = if baz
        then qux
        else if baz'
             then qux'
             else qux''
OUTPUT
[("tests/serialise-seven.hs:1:1: Warning: Use guards\nFound:\n  foo = if baz then qux else if baz' then qux' else qux''\nWhy not:\n  foo\n    | baz = qux\n    | baz' = qux'\n    | otherwise = qux''\n",[Replace {rtype = Bind, pos = SrcSpan {start = (1,1), end = (5,24)}, subts = [("g1001",SrcSpan {start = (1,10), end = (1,13)}),("g1002",SrcSpan {start = (3,17), end = (3,21)}),("e1001",SrcSpan {start = (2,14), end = (2,17)}),("e1002",SrcSpan {start = (4,19), end = (4,23)}),("e1003",SrcSpan {start = (5,19), end = (5,24)})], orig = "foo\n  | g1001 = e1001\n  | g1002 = e1002\n  | otherwise = e1003"}])]


---------------------------------------------------------------------
RUN tests/serialise-eight.hs --serialise
FILE tests/serialise-eight.hs
foo = do x <- baz
         x
OUTPUT
[("tests/serialise-eight.hs:1:7: Error: Use join\nFound:\n  do x <- baz\n     x\nWhy not:\n  do join baz\n",[Replace {rtype = Stmt, pos = SrcSpan {start = (1,10), end = (1,18)}, subts = [("x",SrcSpan {start = (1,15), end = (1,18)})], orig = "join x"},Delete {pos = SrcSpan {start = (2,10), end = (2,11)}}])]

---------------------------------------------------------------------
RUN tests/serialise-nine.hs --serialise
FILE tests/serialise-nine.hs
foo | True = baz
OUTPUT
[("tests/serialise-nine.hs:1:1: Warning: Redundant guard\nFound:\n  foo | True = baz\nWhy not:\n  foo = baz\n",[Delete {pos = SrcSpan {start = (1,7), end = (1,11)}}])]

