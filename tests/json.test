---------------------------------------------------------------------
RUN tests/json-none.hs --json
FILE tests/json-none.hs
foo = (+1)
OUTPUT
[]

---------------------------------------------------------------------
RUN tests/json-one.hs --json
FILE tests/json-one.hs
foo = (+1)
bar x = foo x
OUTPUT
[{"module":"Main","decl":"bar","severity":"Error","hint":"Eta reduce","file":"tests/json-one.hs","startLine":2,"startColumn":1,"endLine":2,"endColumn":14,"from":"bar x = foo x","to":"bar = foo","note":[],"refactorings":"[]"}]

---------------------------------------------------------------------
RUN tests/json-two.hs --json
FILE tests/json-two.hs
foo = (+1)
bar x = foo x
baz = getLine >>= return . map toUpper
OUTPUT
[{"module":"Main","decl":"bar","severity":"Error","hint":"Eta reduce","file":"tests/json-two.hs","startLine":2,"startColumn":1,"endLine":2,"endColumn":14,"from":"bar x = foo x","to":"bar = foo","note":[],"refactorings":"[]"}
,{"module":"Main","decl":"baz","severity":"Warning","hint":"Use liftM","file":"tests/json-two.hs","startLine":3,"startColumn":7,"endLine":3,"endColumn":39,"from":"getLine >>= return . map toUpper","to":"Control.Monad.liftM (map toUpper) getLine","note":[],"refactorings":"[Replace {rtype = Expr, pos = SrcSpan {startLine = 3, startCol = 7, endLine = 3, endCol = 39}, subts = [(\"f\",SrcSpan {startLine = 3, startCol = 28, endLine = 3, endCol = 39}),(\"m\",SrcSpan {startLine = 3, startCol = 7, endLine = 3, endCol = 14})], orig = \"Control.Monad.liftM (f) m\"}]"}]
